<?php
/**
 * Copyright (c) 2020 Wakers.cz
 * @author Jiří Zapletal (https://www.wakers.cz, zapletal@wakers.cz)
 */
declare(strict_types=1);

namespace App\UserModule\Presenter;

use App\BaseModule\Presenter\BasePresenter;
use App\UserModule\Component\User\LoginForm\ILoginForm;
use App\UserModule\Component\User\LoginForm\LoginForm;
use App\UserModule\Component\User\NameForm\INameForm;
use App\UserModule\Component\User\NameForm\NameForm;
use App\UserModule\Component\User\PasswordForm\IPasswordForm;
use App\UserModule\Component\User\PasswordForm\PasswordForm;

final class UserPresenter extends BasePresenter
{
    /**
     * @var ILoginForm
     * @inject
     */
    public ILoginForm $ILoginForm;

    /**
     * @var INameForm
     * @inject
     */
    public INameForm $INameForm;

    /**
     * @var IPasswordForm
     * @inject
     */
    public IPasswordForm $IPasswordForm;

    /**
     * Startup
     * @throws \Nette\Application\AbortException
     */
    public function startup() : void
    {
        parent::startup(); // TODO: Change the autogenerated stub

        if (!$this->activeUser && !$this->isLinkCurrent(':User:User:login')) {
            $this->redirect(':User:User:login');
        }
    }

    /**
     * @return LoginForm
     */
    protected function createComponentUserLoginForm() : LoginForm
    {
        return $this->ILoginForm->create();
    }

    /**
     * @return NameForm
     */
    protected function createComponentUserNameForm() : NameForm
    {
        return $this->INameForm->create($this->activeUser);
    }

    /**
     * @return PasswordForm
     */
    protected function createComponentUserPasswordForm() : PasswordForm
    {
        return $this->IPasswordForm->create($this->activeUser);
    }
}
